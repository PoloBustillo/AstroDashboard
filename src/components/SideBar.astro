---
/* eslint max-lines: 'off' */
import { Icon } from "astro-icon/components";
const links = [
  {
    href: "/",
    text: "Dashboard",
    icon: "dashboard",
  },
  {
    href: "/notificaciones",
    text: "Notificaciones",
    icon: "notifications",
  },
  {
    href: "/usuarios",
    text: "Usuarios",
    icon: "users",
  },
  {
    href: "/protected/recursos",
    text: "Recursos",
    icon: "multimedia",
  },
  {
    href: "/auth/sign-in",
    text: "Accede",
    icon: "acceder",
  },
  {
    href: "/auth/sign-up",
    text: "Crear cuenta",
    icon: "adduser",
  },

  {
    href: "/machine-learning",
    text: "ML",
    icon: "machine-learning",
  },
];
const { pathname } = Astro.url;
console.log(pathname);
---

<!-- TODO: Dynamic dropdowns -->
<aside
  id="sidebar"
  class="fixed top-0 left-0 z-20 flex flex-col flex-shrink-0 hidden w-64 h-full pt-16 font-normal duration-75 lg:flex transition-width"
  aria-label="Sidebar"
>
  <div
    class="relative flex flex-col flex-1 min-h-0 pt-0 bg-white border-r border-gray-200 dark:bg-gray-800 dark:border-gray-700"
  >
    <div
      class:list={[
        "flex flex-col flex-1 pt-5 pb-28 overflow-y-auto",
        "scrollbar scrollbar-w-2 scrollbar-thumb-rounded-[0.1667rem]",
        "scrollbar-thumb-slate-200 scrollbar-track-gray-400",
        "dark:scrollbar-thumb-slate-900 dark:scrollbar-track-gray-800",
      ]}
    >
      <div
        class="flex-1 px-3 space-y-1 bg-white divide-y divide-gray-200 dark:bg-gray-800 dark:divide-gray-700"
      >
        <ul class="pb-2 space-y-2">
          {
            links.map((link) => (
              <li>
                <a
                  transition:name={pathname == link.href ? "fade" : "none"}
                  href={link.href}
                  class:list={[
                    "flex items-center p-2 text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 group",
                    { active: pathname == link.href },
                  ]}
                >
                  <Icon
                    class="flex-shrink-0 w-7 h-7 text-gray-500 transition duration-75 dark:text-gray-400"
                    name={link.icon}
                  />

                  <span class="flex-1 ms-3">{link.text}</span>
                  {link.href == "/notificaciones" && (
                    <span class="inline-flex items-center justify-center w-3 h-3 p-3 ms-3 text-sm font-medium text-blue-800 bg-blue-100 rounded-full dark:bg-blue-900 dark:text-blue-300">
                      3
                    </span>
                  )}
                </a>
                          
              </li>
            ))
          }
        </ul>
      </div>
    </div>
  </div>
</aside>

<div
  class="fixed inset-0 z-10 hidden bg-gray-900/50 dark:bg-gray-900/90"
  id="sidebarBackdrop"
>
</div>

<script>
  const sidebar = document.getElementById("sidebar");

  if (sidebar) {
    const toggleSidebarMobile = (
      sidebar: HTMLElement,
      sidebarBackdrop: HTMLElement,
      toggleSidebarMobileHamburger: HTMLElement,
      toggleSidebarMobileClose: HTMLElement,
    ) => {
      sidebar.classList.toggle("hidden");
      sidebarBackdrop.classList.toggle("hidden");
      toggleSidebarMobileHamburger.classList.toggle("hidden");
      toggleSidebarMobileClose.classList.toggle("hidden");
    };

    const toggleSidebarMobileEl = document.getElementById(
      "toggleSidebarMobile",
    );
    const sidebarBackdrop = document.getElementById("sidebarBackdrop")!;
    const toggleSidebarMobileHamburger = document.getElementById(
      "toggleSidebarMobileHamburger",
    )!;
    const toggleSidebarMobileClose = document.getElementById(
      "toggleSidebarMobileClose",
    )!;
    const toggleSidebarMobileSearch = document.getElementById(
      "toggleSidebarMobileSearch",
    )!;

    toggleSidebarMobileSearch?.addEventListener("click", () => {
      toggleSidebarMobile(
        sidebar,
        sidebarBackdrop,
        toggleSidebarMobileHamburger,
        toggleSidebarMobileClose,
      );
    });

    toggleSidebarMobileEl?.addEventListener("click", () => {
      toggleSidebarMobile(
        sidebar,
        sidebarBackdrop,
        toggleSidebarMobileHamburger,
        toggleSidebarMobileClose,
      );
    });

    sidebarBackdrop?.addEventListener("click", () => {
      toggleSidebarMobile(
        sidebar,
        sidebarBackdrop,
        toggleSidebarMobileHamburger,
        toggleSidebarMobileClose,
      );
    });
  }
</script>
