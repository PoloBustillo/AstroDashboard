---
import { getSession } from "auth-astro/server";
import EditorComponent from "./EditorComponent";

const session = await getSession(Astro.request);
---

<!-- <script>
  import { actions } from "astro:actions";

  const uploadedFilesArray: { file: File; content: string }[] = [];

  const mainForm = document.querySelector("#mainForm");
  if (mainForm) {
    mainForm.addEventListener("submit", async (event) => {
      event.preventDefault();
      const formData = new FormData(event.target as HTMLFormElement);
      const dataElement = document.getElementById("data");
      let dataJson = "";
      if (dataElement) {
        dataJson = dataElement.getAttribute("data-json") || "";
      }

      const target = event.target as HTMLFormElement;
      const id = (target.dataset.id ?? "") as string;
      console.log("üöÄ ~ mainForm.addEventListener ~ id:", id);
      const btnSubmit = document.querySelector("#btnSubmit");
      btnSubmit?.setAttribute("disabled", "disabled");

      const title = formData.get("title") as string;
      const description = formData.get("description") as string;
      const tags = formData.get("tags") as string;
      const content = formData.get("content") as string;
      const type = formData.get("type") as string;

      const { data, error } = await actions.addResource({
        title,
        description,
        userId: id,
        tags,
        contentJson: dataJson,
        type,
        files: uploadedFilesArray.map((f) => f.content),
      });

      uploadedFilesArray.length = 0;

      (mainForm as HTMLFormElement).reset();
      btnSubmit?.removeAttribute("disabled");
      // const closeDrawerButton = document.getElementById("closeDrawer");
      // if (closeDrawerButton) {
      //   closeDrawerButton.click();
      // }
      window.location.reload();
    });
  }
</script> -->
<script>
  import { actions } from "astro:actions";

  document.addEventListener("DOMContentLoaded", () => {
    const updateButtons = document.querySelectorAll("#updateProductButton");
    updateButtons.forEach((button) => {
      button.addEventListener("click", (event) => {
        const buttonClicked = event.currentTarget;
        if (buttonClicked) {
          const resourceId = (buttonClicked as HTMLElement).getAttribute(
            "data-resource",
          );
          const resourceData = JSON.parse(resourceId || "{}");
          const titleInput = document.querySelector(
            "input[name='title']",
          ) as HTMLInputElement;
          const descriptionInput = document.querySelector(
            "textarea[name='description']",
          ) as HTMLTextAreaElement;
          const tagsInput = document.querySelector(
            "input[name='tags']",
          ) as HTMLInputElement;
          const typeSelect = document.querySelector(
            "select[name='type']",
          ) as HTMLSelectElement;

          const contentInput = document.querySelector(
            "textarea[name='content']",
          ) as HTMLTextAreaElement;

          if (contentInput) {
            contentInput.value = resourceData.content || "";
          }

          // Save content to localStorage
          localStorage.setItem("contentData", JSON.stringify(resourceData));

          if (titleInput) titleInput.value = resourceData.name || "";
          if (descriptionInput)
            descriptionInput.value = resourceData.description || "";
          if (tagsInput) tagsInput.value = resourceData.tags || "";
          if (typeSelect) typeSelect.value = resourceData.type || "none";
          const updateButton = document.querySelector("#btnSubmitUpdate");
          if (updateButton) {
            if (resourceId) {
              updateButton.setAttribute("data-resource", resourceId);
            }
          }
        }
      });
    });
  });
</script>
<div
  id="drawer-update-product-default"
  class="fixed top-0 right-0 z-40 w-full h-screen max-w-sm p-4 overflow-y-auto transition-transform translate-x-full bg-white dark:bg-gray-800"
  tabindex="-1"
  aria-labelledby="drawer-label"
  aria-hidden="true"
>
  <h5
    id="drawer-label"
    class="inline-flex items-center mb-6 text-sm font-semibold text-gray-500 uppercase dark:text-gray-400"
  >
    Actualizar recurso
  </h5>
  <button
    id="closeDrawer"
    type="button"
    data-drawer-dismiss="drawer-update-product-default"
    aria-controls="drawer-update-product-default"
    class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 absolute top-2.5 right-2.5 inline-flex items-center dark:hover:bg-gray-600 dark:hover:text-white"
  >
    <svg
      aria-hidden="true"
      class="w-5 h-5"
      fill="currentColor"
      viewBox="0 0 20 20"
      xmlns="http://www.w3.org/2000/svg"
      ><path
        fill-rule="evenodd"
        d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
        clip-rule="evenodd"></path></svg
    >
    <span class="sr-only">Cerrar</span>
  </button>

  <div id="uploadedFiles"></div>

  <form
    id="mainForm"
    data-id={session?.user.idUser}
    data-email={session?.user.email}
  >
    <div class="space-y-4 my-4">
      <label
        for="content"
        class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
        >Contenido</label
      >
      <EditorComponent client:idle />
    </div>
    <div class="space-y-4">
      <div>
        <label
          for="name"
          class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
          >Titulo</label
        >
        <input
          type="text"
          name="title"
          id="name"
          class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
          placeholder="Titulo del recurso"
          required=""
        />
      </div>

      <div>
        <label
          for="description"
          class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
          >Descripci√≥n</label
        >
        <textarea
          id="description"
          name="description"
          rows="4"
          class="block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
          placeholder="Descripci√≥n del recurso"></textarea>
      </div>
      <div>
        <label
          for="tags"
          class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
          >Etiquetas (separadas por coma)</label
        >
        <input
          type="text"
          name="tags"
          id="tags"
          class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
          placeholder="Etiquetas del recurso"
          required=""
        />
      </div>

      <div id="typeDropdown" class="hidden">
        <label
          for="type"
          class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
          >Tipo</label
        >
        <select
          id="type"
          name="type"
          class="bg-gray-50 border block border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
          required=""
        >
          <option value="none">Ninguno</option>
          <option value="pdf">PDF</option>
          <option value="image">Imagen</option>
          <option value="url">URL</option>
        </select>
      </div>
      <div class="flex justify-center w-full space-x-4">
        <button
          id="btnSubmitUpdate"
          type="submit"
          class="text-white w-full justify-center bg-primary-700 hover:bg-primary-800 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800"
        >
          Actualizar
        </button>
        <button
          id="cancelButton"
          type="button"
          data-drawer-dismiss="drawer-update-product-default"
          aria-controls="drawer-update-product-default"
          class="inline-flex w-full justify-center text-gray-500 items-center bg-white hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-primary-300 rounded-lg border border-gray-200 text-sm font-medium px-5 py-2.5 hover:text-gray-900 focus:z-10 dark:bg-gray-700 dark:text-gray-300 dark:border-gray-500 dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-gray-600"
        >
          <svg
            aria-hidden="true"
            class="w-5 h-5 -ml-1 sm:mr-1"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
            ><path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M6 18L18 6M6 6l12 12"></path></svg
          >
          Cancelar
        </button>
      </div>
    </div>
  </form>
</div>
