---
import { getSession } from "auth-astro/server";

const session = await getSession(Astro.request);
const email = session?.user.email;
---

<script>
  import { actions } from "astro:actions";
  import Dropzone from "dropzone";
  import "dropzone/dist/dropzone.css";

  var myDropzone = new Dropzone("#dropzoneform", {
    thumbnail: function (file, dataUrl) {
      if (file.previewElement) {
        file.previewElement.classList.remove("dz-file-preview");
        var images = file.previewElement.querySelectorAll(
          "[data-dz-thumbnail]",
        );
        for (var i = 0; i < images.length; i++) {
          var thumbnailElement = images[i] as HTMLImageElement;
          thumbnailElement.alt = file.name;
          thumbnailElement.src = dataUrl;
        }
        setTimeout(function () {
          file.previewElement.classList.add("dz-image-preview");
        }, 1);
      }
    },

    dictCancelUpload: "Cancelar",
    dictCancelUploadConfirmation:
      "¿Estás seguro de que quieres cancelar esta carga?",
    dictDefaultMessage: "Arrastra los archivos aquí para subirlos o haz clic",
    dictFallbackMessage:
      "Tu navegador no soporta la carga de archivos con arrastrar y soltar.",
    dictFallbackText:
      "Por favor, utiliza el formulario de abajo para subir tus archivos como en los viejos tiempos.",
    dictFileTooBig:
      "El archivo es muy grande ({{filesize}}MiB). Tamaño máximo: {{maxFilesize}}MiB.",
    dictInvalidFileType: "No puedes subir archivos de este tipo.",
    dictResponseError: "El servidor respondió con el código {{statusCode}}.",
    dictUploadCanceled: "La carga ha sido cancelada.",
    dictRemoveFileConfirmation:
      "¿Estás seguro de que quieres eliminar este archivo?",
    dictRemoveFile: "Eliminar archivo",
    dictMaxFilesExceeded: "No puedes subir más archivos.",
    paramName: "file",
    maxFiles: 10,
    maxFilesize: 10, // MB
    addRemoveLinks: true,
  });

  const uploadedFilesArray: File[] = [];

  myDropzone.on("addedfile", function (file) {
    uploadedFilesArray.push(file);
  });

  myDropzone.on("removedfile", function (file) {
    const index = uploadedFilesArray.findIndex((f) => f.name === file.name);
    if (index !== -1) {
      uploadedFilesArray.splice(index, 1);
    }
  });

  document
    .getElementById("closeDrawer")
    ?.addEventListener("click", function () {
      uploadedFilesArray.length = 0;
      myDropzone.removeAllFiles(true);
      const form = document.getElementById("mainForm") as HTMLFormElement;
      form?.reset();
    });
  document
    .getElementById("closeDrawer")
    ?.addEventListener("click", function () {
      uploadedFilesArray.length = 0;
      myDropzone.removeAllFiles(true);
      const form = document.getElementById("mainForm") as HTMLFormElement;
      form?.reset();
    });

  const mainForm = document.querySelector("#mainForm");
  if (mainForm) {
    mainForm.addEventListener("submit", async (event) => {
      event.preventDefault();

      const target = event.target as HTMLFormElement;
      const id = target.dataset.id ?? "";
      const email = target.dataset.email ?? "";

      console.log("ID:", id);
      console.log("Email:", email);

      const btnSubmit = document.querySelector("#btnSubmit");
      btnSubmit?.setAttribute("disabled", "disabled");
      const formData = new FormData(event.target as HTMLFormElement);

      const title = formData.get("title") as string;
      const description = formData.get("description") as string;

      const { data, error } = await actions.addResource({
        title,
        description,
        userId: id,
      });

      console.log("Form Data:");
      console.log("🚀 ~ uploadedFilesArray:", uploadedFilesArray);
      for (let [key, value] of formData.entries()) {
        console.log(`${key}: ${value}`);
      }

      uploadedFilesArray.length = 0;
      myDropzone.removeAllFiles(true);
      (mainForm as HTMLFormElement).reset();
      btnSubmit?.removeAttribute("disabled");
      const closeDrawerButton = document.getElementById("closeDrawer");
      if (closeDrawerButton) {
        closeDrawerButton.click();
      }
    });
  }
</script>

<div
  id="drawer-create-product-default"
  class="fixed top-0 right-0 z-40 w-full h-screen max-w-xs p-4 overflow-y-auto transition-transform translate-x-full bg-white dark:bg-gray-800"
  tabindex="-1"
  aria-labelledby="drawer-label"
  aria-hidden="true"
>
  <h5
    id="drawer-label"
    class="inline-flex items-center mb-6 text-sm font-semibold text-gray-500 uppercase dark:text-gray-400"
  >
    Nuevo recurso
  </h5>
  <button
    id="closeDrawer"
    type="button"
    data-drawer-dismiss="drawer-create-product-default"
    aria-controls="drawer-create-product-default"
    class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 absolute top-2.5 right-2.5 inline-flex items-center dark:hover:bg-gray-600 dark:hover:text-white"
  >
    <svg
      aria-hidden="true"
      class="w-5 h-5"
      fill="currentColor"
      viewBox="0 0 20 20"
      xmlns="http://www.w3.org/2000/svg"
      ><path
        fill-rule="evenodd"
        d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
        clip-rule="evenodd"></path></svg
    >
    <span class="sr-only">Cerrar</span>
  </button>
  <div
    id="dropzone"
    class="w-full p-4 my-4 bg-white rounded-lg shadow-lg dark:bg-gray-800"
  >
    <form
      class="dropzone m-auto text-center rounded-lg p-4 shadow-md"
      id="dropzoneform"
      action="#"
    >
      <div class="dz-message needsclick">
        <h2 class="font-bold text-gray-700 dark:text-gray-300">
          Subir archivos o soltar aquí
        </h2>
      </div>
    </form>
  </div>

  <div id="uploadedFiles"></div>

  <form
    id="mainForm"
    data-id={session?.user.id}
    data-email={session?.user.email}
  >
    <div class="space-y-4">
      <div>
        <label
          for="name"
          class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
          >Titulo</label
        >
        <input
          type="text"
          name="title"
          id="name"
          class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
          placeholder="Titulo del recurso"
          required=""
        />
      </div>

      <div>
        <label
          for="description"
          class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
          >Descripción</label
        >
        <textarea
          id="description"
          name="description"
          rows="4"
          class="block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
          placeholder="Descripción del recurso"></textarea>
      </div>

      <div class="flex justify-center w-full space-x-4">
        <button
          id="btnSubmit"
          type="submit"
          class="text-white w-full justify-center bg-primary-700 hover:bg-primary-800 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800"
        >
          Añadir
        </button>
        <button
          id="cancelButton"
          type="button"
          data-drawer-dismiss="drawer-create-product-default"
          aria-controls="drawer-create-product-default"
          class="inline-flex w-full justify-center text-gray-500 items-center bg-white hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-primary-300 rounded-lg border border-gray-200 text-sm font-medium px-5 py-2.5 hover:text-gray-900 focus:z-10 dark:bg-gray-700 dark:text-gray-300 dark:border-gray-500 dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-gray-600"
        >
          <svg
            aria-hidden="true"
            class="w-5 h-5 -ml-1 sm:mr-1"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
            ><path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M6 18L18 6M6 6l12 12"></path></svg
          >
          Cancelar
        </button>
      </div>
    </div>
  </form>
</div>
